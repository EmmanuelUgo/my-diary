[
  {
    "path": "posts/2022-02-10-vroom-vs-readr/",
    "title": "Vroom vs Readr",
    "description": "A faster way to load data in R",
    "author": [
      {
        "name": "Emmanuel Ugochukwu",
        "url": "https://github.com/emmanuelugo"
      }
    ],
    "date": "2022-02-10",
    "categories": [
      "R Packages",
      "readr",
      "vroom"
    ],
    "contents": "\r\n\r\nContents\r\nLoading Libraries\r\nCreating a tracking function\r\nVisualization\r\nConclusion\r\n\r\nThe {vroom} package has been out for a while now and in this post, we will be comparing it to the {readr} package. Both packages are used to load data in R. Today, we’ll be looking at the time it takes vroom() from the vroom package to load data and comparing it to the read_csv() function from the {readr} package. The {readr} package is part of the {tidyverse} ecosystem.\r\nWho knows, you might learn something from my codes 🤪\r\nLoading Libraries\r\n\r\n\r\nlibrary(vroom)\r\nlibrary(tidyverse)\r\nlibrary(ggimage)\r\nlibrary(ggtext)\r\nlibrary(showtext)\r\n\r\n\r\nfont_add_google(name = \"quicksand\", family = \"quicksand\")\r\n\r\n\r\n\r\nCreating a tracking function\r\nThis function takes a single argument, path (location to the file on your PC) and records the time it took to load that file using the vroom() and read_csv() function and return a tibble of results with the size of the data.\r\n\r\n\r\nget_time_diff <- function(path) {\r\n  ## For Vroom\r\n  start_vroom <- Sys.time()\r\n\r\n  vroom_data <- vroom(path, show_col_types = FALSE)\r\n\r\n  end_vroom <- Sys.time()\r\n\r\n  result_vroom <- end_vroom - start_vroom\r\n\r\n  ## For readR\r\n  start_readr <- Sys.time()\r\n\r\n  readr_data <- read_csv(path)\r\n\r\n  end_readr <- Sys.time()\r\n\r\n  result_readr <- end_readr - start_readr\r\n\r\n  final_table <- tribble(\r\n    ~vroom, ~readr, ~size,\r\n    ##########################\r\n    result_vroom, result_readr, format(object.size(vroom_data), units = \"Gb\")\r\n  )\r\n\r\n  return(final_table)\r\n}\r\n\r\n\r\n\r\n\r\n\r\nresults <- get_time_diff(paths) %>%\r\n  select(size, readr, vroom) %>%\r\n  mutate_at(c(\"readr\", \"vroom\"), as.numeric)\r\n\r\n\r\n\r\n\r\n\r\nhtml {\r\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Helvetica Neue', 'Fira Sans', 'Droid Sans', Arial, sans-serif;\r\n}\r\n\r\n#hosyqnnpfp .gt_table {\r\n  display: table;\r\n  border-collapse: collapse;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  color: #333333;\r\n  font-size: 16px;\r\n  font-weight: normal;\r\n  font-style: normal;\r\n  background-color: #FFFFFF;\r\n  width: auto;\r\n  border-top-style: solid;\r\n  border-top-width: 2px;\r\n  border-top-color: #A8A8A8;\r\n  border-right-style: none;\r\n  border-right-width: 2px;\r\n  border-right-color: #D3D3D3;\r\n  border-bottom-style: solid;\r\n  border-bottom-width: 2px;\r\n  border-bottom-color: #A8A8A8;\r\n  border-left-style: none;\r\n  border-left-width: 2px;\r\n  border-left-color: #D3D3D3;\r\n}\r\n\r\n#hosyqnnpfp .gt_heading {\r\n  background-color: #FFFFFF;\r\n  text-align: center;\r\n  border-bottom-color: #FFFFFF;\r\n  border-left-style: none;\r\n  border-left-width: 1px;\r\n  border-left-color: #D3D3D3;\r\n  border-right-style: none;\r\n  border-right-width: 1px;\r\n  border-right-color: #D3D3D3;\r\n}\r\n\r\n#hosyqnnpfp .gt_title {\r\n  color: #333333;\r\n  font-size: 125%;\r\n  font-weight: initial;\r\n  padding-top: 4px;\r\n  padding-bottom: 4px;\r\n  border-bottom-color: #FFFFFF;\r\n  border-bottom-width: 0;\r\n}\r\n\r\n#hosyqnnpfp .gt_subtitle {\r\n  color: #333333;\r\n  font-size: 85%;\r\n  font-weight: initial;\r\n  padding-top: 0;\r\n  padding-bottom: 4px;\r\n  border-top-color: #FFFFFF;\r\n  border-top-width: 0;\r\n}\r\n\r\n#hosyqnnpfp .gt_bottom_border {\r\n  border-bottom-style: solid;\r\n  border-bottom-width: 2px;\r\n  border-bottom-color: #D3D3D3;\r\n}\r\n\r\n#hosyqnnpfp .gt_col_headings {\r\n  border-top-style: solid;\r\n  border-top-width: 2px;\r\n  border-top-color: #D3D3D3;\r\n  border-bottom-style: solid;\r\n  border-bottom-width: 2px;\r\n  border-bottom-color: #D3D3D3;\r\n  border-left-style: none;\r\n  border-left-width: 1px;\r\n  border-left-color: #D3D3D3;\r\n  border-right-style: none;\r\n  border-right-width: 1px;\r\n  border-right-color: #D3D3D3;\r\n}\r\n\r\n#hosyqnnpfp .gt_col_heading {\r\n  color: #333333;\r\n  background-color: #FFFFFF;\r\n  font-size: 100%;\r\n  font-weight: normal;\r\n  text-transform: inherit;\r\n  border-left-style: none;\r\n  border-left-width: 1px;\r\n  border-left-color: #D3D3D3;\r\n  border-right-style: none;\r\n  border-right-width: 1px;\r\n  border-right-color: #D3D3D3;\r\n  vertical-align: bottom;\r\n  padding-top: 5px;\r\n  padding-bottom: 6px;\r\n  padding-left: 5px;\r\n  padding-right: 5px;\r\n  overflow-x: hidden;\r\n}\r\n\r\n#hosyqnnpfp .gt_column_spanner_outer {\r\n  color: #333333;\r\n  background-color: #FFFFFF;\r\n  font-size: 100%;\r\n  font-weight: normal;\r\n  text-transform: inherit;\r\n  padding-top: 0;\r\n  padding-bottom: 0;\r\n  padding-left: 4px;\r\n  padding-right: 4px;\r\n}\r\n\r\n#hosyqnnpfp .gt_column_spanner_outer:first-child {\r\n  padding-left: 0;\r\n}\r\n\r\n#hosyqnnpfp .gt_column_spanner_outer:last-child {\r\n  padding-right: 0;\r\n}\r\n\r\n#hosyqnnpfp .gt_column_spanner {\r\n  border-bottom-style: solid;\r\n  border-bottom-width: 2px;\r\n  border-bottom-color: #D3D3D3;\r\n  vertical-align: bottom;\r\n  padding-top: 5px;\r\n  padding-bottom: 6px;\r\n  overflow-x: hidden;\r\n  display: inline-block;\r\n  width: 100%;\r\n}\r\n\r\n#hosyqnnpfp .gt_group_heading {\r\n  padding: 8px;\r\n  color: #333333;\r\n  background-color: #FFFFFF;\r\n  font-size: 100%;\r\n  font-weight: initial;\r\n  text-transform: inherit;\r\n  border-top-style: solid;\r\n  border-top-width: 2px;\r\n  border-top-color: #D3D3D3;\r\n  border-bottom-style: solid;\r\n  border-bottom-width: 2px;\r\n  border-bottom-color: #D3D3D3;\r\n  border-left-style: none;\r\n  border-left-width: 1px;\r\n  border-left-color: #D3D3D3;\r\n  border-right-style: none;\r\n  border-right-width: 1px;\r\n  border-right-color: #D3D3D3;\r\n  vertical-align: middle;\r\n}\r\n\r\n#hosyqnnpfp .gt_empty_group_heading {\r\n  padding: 0.5px;\r\n  color: #333333;\r\n  background-color: #FFFFFF;\r\n  font-size: 100%;\r\n  font-weight: initial;\r\n  border-top-style: solid;\r\n  border-top-width: 2px;\r\n  border-top-color: #D3D3D3;\r\n  border-bottom-style: solid;\r\n  border-bottom-width: 2px;\r\n  border-bottom-color: #D3D3D3;\r\n  vertical-align: middle;\r\n}\r\n\r\n#hosyqnnpfp .gt_from_md > :first-child {\r\n  margin-top: 0;\r\n}\r\n\r\n#hosyqnnpfp .gt_from_md > :last-child {\r\n  margin-bottom: 0;\r\n}\r\n\r\n#hosyqnnpfp .gt_row {\r\n  padding-top: 8px;\r\n  padding-bottom: 8px;\r\n  padding-left: 5px;\r\n  padding-right: 5px;\r\n  margin: 10px;\r\n  border-top-style: solid;\r\n  border-top-width: 1px;\r\n  border-top-color: #D3D3D3;\r\n  border-left-style: none;\r\n  border-left-width: 1px;\r\n  border-left-color: #D3D3D3;\r\n  border-right-style: none;\r\n  border-right-width: 1px;\r\n  border-right-color: #D3D3D3;\r\n  vertical-align: middle;\r\n  overflow-x: hidden;\r\n}\r\n\r\n#hosyqnnpfp .gt_stub {\r\n  color: #333333;\r\n  background-color: #FFFFFF;\r\n  font-size: 100%;\r\n  font-weight: initial;\r\n  text-transform: inherit;\r\n  border-right-style: solid;\r\n  border-right-width: 2px;\r\n  border-right-color: #D3D3D3;\r\n  padding-left: 12px;\r\n}\r\n\r\n#hosyqnnpfp .gt_summary_row {\r\n  color: #333333;\r\n  background-color: #FFFFFF;\r\n  text-transform: inherit;\r\n  padding-top: 8px;\r\n  padding-bottom: 8px;\r\n  padding-left: 5px;\r\n  padding-right: 5px;\r\n}\r\n\r\n#hosyqnnpfp .gt_first_summary_row {\r\n  padding-top: 8px;\r\n  padding-bottom: 8px;\r\n  padding-left: 5px;\r\n  padding-right: 5px;\r\n  border-top-style: solid;\r\n  border-top-width: 2px;\r\n  border-top-color: #D3D3D3;\r\n}\r\n\r\n#hosyqnnpfp .gt_grand_summary_row {\r\n  color: #333333;\r\n  background-color: #FFFFFF;\r\n  text-transform: inherit;\r\n  padding-top: 8px;\r\n  padding-bottom: 8px;\r\n  padding-left: 5px;\r\n  padding-right: 5px;\r\n}\r\n\r\n#hosyqnnpfp .gt_first_grand_summary_row {\r\n  padding-top: 8px;\r\n  padding-bottom: 8px;\r\n  padding-left: 5px;\r\n  padding-right: 5px;\r\n  border-top-style: double;\r\n  border-top-width: 6px;\r\n  border-top-color: #D3D3D3;\r\n}\r\n\r\n#hosyqnnpfp .gt_striped {\r\n  background-color: rgba(128, 128, 128, 0.05);\r\n}\r\n\r\n#hosyqnnpfp .gt_table_body {\r\n  border-top-style: solid;\r\n  border-top-width: 2px;\r\n  border-top-color: #D3D3D3;\r\n  border-bottom-style: solid;\r\n  border-bottom-width: 2px;\r\n  border-bottom-color: #D3D3D3;\r\n}\r\n\r\n#hosyqnnpfp .gt_footnotes {\r\n  color: #333333;\r\n  background-color: #FFFFFF;\r\n  border-bottom-style: none;\r\n  border-bottom-width: 2px;\r\n  border-bottom-color: #D3D3D3;\r\n  border-left-style: none;\r\n  border-left-width: 2px;\r\n  border-left-color: #D3D3D3;\r\n  border-right-style: none;\r\n  border-right-width: 2px;\r\n  border-right-color: #D3D3D3;\r\n}\r\n\r\n#hosyqnnpfp .gt_footnote {\r\n  margin: 0px;\r\n  font-size: 90%;\r\n  padding: 4px;\r\n}\r\n\r\n#hosyqnnpfp .gt_sourcenotes {\r\n  color: #333333;\r\n  background-color: #FFFFFF;\r\n  border-bottom-style: none;\r\n  border-bottom-width: 2px;\r\n  border-bottom-color: #D3D3D3;\r\n  border-left-style: none;\r\n  border-left-width: 2px;\r\n  border-left-color: #D3D3D3;\r\n  border-right-style: none;\r\n  border-right-width: 2px;\r\n  border-right-color: #D3D3D3;\r\n}\r\n\r\n#hosyqnnpfp .gt_sourcenote {\r\n  font-size: 90%;\r\n  padding: 4px;\r\n}\r\n\r\n#hosyqnnpfp .gt_left {\r\n  text-align: left;\r\n}\r\n\r\n#hosyqnnpfp .gt_center {\r\n  text-align: center;\r\n}\r\n\r\n#hosyqnnpfp .gt_right {\r\n  text-align: right;\r\n  font-variant-numeric: tabular-nums;\r\n}\r\n\r\n#hosyqnnpfp .gt_font_normal {\r\n  font-weight: normal;\r\n}\r\n\r\n#hosyqnnpfp .gt_font_bold {\r\n  font-weight: bold;\r\n}\r\n\r\n#hosyqnnpfp .gt_font_italic {\r\n  font-style: italic;\r\n}\r\n\r\n#hosyqnnpfp .gt_super {\r\n  font-size: 65%;\r\n}\r\n\r\n#hosyqnnpfp .gt_footnote_marks {\r\n  font-style: italic;\r\n  font-weight: normal;\r\n  font-size: 65%;\r\n}\r\n\r\n      size\r\n      readr\r\n      vroom\r\n    1\r\n1.4 Gb\r\n43.90 Sec\r\n10.25 Sec\r\n\r\nVisualization\r\n\r\n\r\nresults <- results %>%\r\n  pivot_longer(cols = c(vroom, readr))\r\n\r\nsticker_pos <- tibble(\r\n  x = c(\"vroom\", \"readr\"),\r\n  y = c(results$value[1] / 2, results$value[2] / 2),\r\n  sticker = c(\"vroom.png\", \"readr.png\")\r\n)\r\n\r\n\r\n\r\n\r\n\r\nggplot() +\r\n  geom_col(data = results, aes(name, value)) +\r\n  geom_hline(yintercept = results$value[2] / 2, lty = 2) +\r\n  geom_image(data = sticker_pos, aes(x, y, image = sticker), size = 0.15) +\r\n  annotate(geom = \"text\", x = \"vroom\", y = (results$value[2] / 2) + 2, label = \"Half time mark for readr\") +\r\n  expand_limits(y = c(0, 50)) +\r\n  labs(\r\n    title = \"**{vroom}** vs **{readr}**\",\r\n    subtitle = \"Comparing the time it takes to load a data size of 1.4Gb\",\r\n    y = \"Time (Sec)\",\r\n    x = NULL\r\n  ) +\r\n  theme_minimal() +\r\n  theme(\r\n    text = element_text(family = \"quicksand\"),\r\n    plot.title = element_markdown()\r\n  )\r\n\r\n\r\n\r\n\r\nConclusion\r\nFrom the plot above, the vroom package did way better than the readr package, reading a 1.4Gb csv file far lower than half the time it took readr to load. The vroom package is an excellent way to load large data sizes in R.\r\nNow you know a new and fast way to load data in R.\r\n❤️\r\n\r\n\r\n\r\n",
    "preview": {},
    "last_modified": "2022-02-12T10:46:39+01:00",
    "input_file": "vroom-vs-readr.knit.md"
  },
  {
    "path": "posts/2022-02-07-my-first-post/",
    "title": "Building a Chat Analyzer app - Part 1",
    "description": "A workflow on how I plan to build this project",
    "author": [
      {
        "name": "Emmanuel Ugochukwu",
        "url": "https://github.com/emmanuelugo"
      }
    ],
    "date": "2022-02-07",
    "categories": [
      "NLP",
      "Shiny",
      "Text Analytics"
    ],
    "contents": "\r\n\r\nContents\r\nFeatures\r\nChat Summary Feature\r\nWordcloud and Sentiment Analysis Feature\r\nWord Association Feature\r\nComparison Feature\r\nExtras\r\n\r\n\r\nHello 👋\r\nIn this post, I go over my plans and ideas on a new project I am embarking on, a Whatsapp Chat Analyzer. It is a fun app where the user uploads their chat history and they are filled with fun fact information about their chats.\r\nThe number of features that would be in this app hasn’t been decided yet but with what I have currently, it should be a fun app. I did a little social experiment with friends and found out how interesting this project would be. Simply telling friends that they have sent X amount of messages over a particular period or they use a particular word all the time or some little fun fact can put a smile on their face. In turn, this project would solidify my understanding on Text Analytics and improve my R Shiny skills.\r\nLet’s go over some of the features of the app, shall we?\r\nFeatures\r\nChat Summary Feature\r\nThis answers the following questions;\r\nTotal number of messages sent.\r\nTotal number of users.\r\nMost active user (by number of text sent)\r\nUser with the highest average length of text.\r\nThe least active user (by number of text sent).\r\nThe user who uses a lot of Emojis 😅\r\nPlots that would be generated in here would include a plot of the (20) most active users by number of text sent and a plot of the top users with highest average text length.\r\nWordcloud and Sentiment Analysis Feature\r\nHere, I plan on grouping text into Happy and Sad sentiments and displaying them with wordclouds and also perform a sentiment trend analysis since there would be a date column.\r\nWord Association Feature\r\nThis would group words together so we can understand how some words are connected. A network graph would be used to display the result.\r\nComparison Feature\r\nThis feature would drill down to a particular person or group of people and would highlight the following:\r\nUnique words for each user(s).\r\nActivity Status: Average chat length, Number of messages sent, Ranking activity level by some time variables.\r\nWordcloud to display most used words.\r\nLexical Diversity.\r\nSentiments.\r\nA feature to download these analysis.\r\nExtras\r\nAnother fun features to implement would be:\r\nWhen a user enters a word, the app returns a plot of the people who has used that word the most and also a popularity trend and the total number of times that word was used.\r\nWith these few ideas, the app should serve as a good data science project. I gave myself a deadline of 2 months to complete the app and I will try my best to beat that time.\r\nI will be writing more blogs covering the entire process.\r\nSee you soon!\r\n❤️\r\n\r\n\r\n\r\n",
    "preview": "posts/2022-02-07-my-first-post/text-analytics.png",
    "last_modified": "2022-02-09T19:15:27+01:00",
    "input_file": {},
    "preview_width": 646,
    "preview_height": 569
  }
]
